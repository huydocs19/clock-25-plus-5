{"version":3,"sources":["logo.svg","Clock.js","App.js","reportWebVitals.js","index.js"],"names":["defaultState","breakLength","sessionLength","sessionTimeLeft","breakTimeLeft","isRunning","isSessionRunning","Clock","props","state","timer","gettMMSS","getMMSS","bind","reset","updateBreakLength","updateSessionLength","startStop","updateSessionTimer","updateBreakTimer","this","setState","audio","document","getElementById","play","setTimeout","pause","currentTime","clearInterval","setInterval","value","newBreakLength","newSessionLength","timeLeft","console","log","minutes","Math","floor","seconds","startOrStop","class","timerColor","color","id","onClick","style","loop","src","type","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.61800869.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\n\r\nconst defaultState = {\r\n    breakLength: 5,\r\n    sessionLength: 25,\r\n    sessionTimeLeft: 1500,\r\n    breakTimeLeft: 300,\r\n    isRunning: false,\r\n    isSessionRunning: true\r\n  }\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n          breakLength: 5,\r\n          sessionLength: 25,\r\n          sessionTimeLeft: 1500,\r\n          breakTimeLeft: 300,\r\n          isRunning: false,\r\n          isSessionRunning: true\r\n          \r\n        }\r\n        this.timer = 0\r\n        this.gettMMSS = this.getMMSS.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.updateBreakLength = this.updateBreakLength.bind(this);\r\n        this.updateSessionLength = this.updateSessionLength.bind(this);\r\n        this.startStop = this.startStop.bind(this);\r\n        this.updateSessionTimer = this.updateSessionTimer.bind(this);\r\n        this.updateBreakTimer = this.updateBreakTimer.bind(this);\r\n      }\r\n      updateSessionTimer() {\r\n        this.setState({sessionTimeLeft: this.state.sessionTimeLeft - 1})\r\n        if (this.state.sessionTimeLeft < 0)\r\n            {\r\n              this.setState({sessionTimeLeft: this.state.sessionLength * 60, isSessionRunning: false});\r\n              let audio = document.getElementById('beep');\r\n              audio.play();\r\n              setTimeout(() => {\r\n                audio.pause();\r\n                audio.currentTime = 0;\r\n              }, 8000)\r\n              clearInterval(this.timer);\r\n              this.timer = setInterval(this.updateBreakTimer, 1000); \r\n               return;\r\n            }\r\n      }\r\n      updateBreakTimer() {\r\n        this.setState({breakTimeLeft: this.state.breakTimeLeft - 1})\r\n        if (this.state.breakTimeLeft < 0)\r\n            {\r\n               this.setState({breakTimeLeft: this.state.breakLength * 60, isSessionRunning: true});\r\n               let audio = document.getElementById('beep');\r\n               audio.play();\r\n               audio.play();\r\n              setTimeout(() => {\r\n                audio.pause();\r\n                audio.currentTime = 0;\r\n              }, 8000)\r\n               clearInterval(this.timer);\r\n               this.timer = setInterval(this.updateSessionTimer, 1000); \r\n               return;\r\n            }\r\n      }\r\n      startStop() {\r\n        if (!this.state.isRunning) {\r\n          this.setState({isRunning: true});\r\n          if (this.state.isSessionRunning) {\r\n             this.timer = setInterval(this.updateSessionTimer, 1000); \r\n          } else {\r\n            this.timer = setInterval(this.updateBreakTimer, 1000); \r\n            \r\n          }\r\n          \r\n        } else {\r\n          this.setState({isRunning: false});\r\n          clearInterval(this.timer);\r\n        }\r\n      }\r\n      updateBreakLength(value) {\r\n        if (!this.state.isRunning && this.state.breakLength > 1 && this.state.breakLength < 60) {\r\n          let newBreakLength = this.state.breakLength + value\r\n          this.setState({breakLength: newBreakLength, breakTimeLeft: newBreakLength * 60});\r\n         };\r\n      }\r\n      updateSessionLength(value) {\r\n        if (!this.state.isRunning && this.state.sessionLength > 1 && this.state.sessionLength < 60) {\r\n          let newSessionLength = this.state.sessionLength + value\r\n          this.setState({sessionLength: newSessionLength, sessionTimeLeft: newSessionLength * 60});\r\n        };\r\n      }\r\n      reset() {\r\n        let audio = document.getElementById('beep');\r\n        audio.pause();\r\n        audio.currentTime = 0;\r\n        clearInterval(this.timer);\r\n        this.setState(defaultState);\r\n      }\r\n      getMMSS() {\r\n        let timeLeft = 0;\r\n        \r\n        if (this.state.isSessionRunning) {\r\n          timeLeft = this.state.sessionTimeLeft;      \r\n        } else {\r\n          timeLeft = this.state.breakTimeLeft;  \r\n        } \r\n        console.log(\"time left\", timeLeft);\r\n        let minutes = Math.floor(timeLeft / 60);\r\n        let seconds = timeLeft - (minutes * 60);\r\n        if (minutes < 10) {minutes = \"0\"+minutes;}\r\n        if (seconds < 10) {seconds = \"0\"+seconds;}\r\n        return minutes+':'+seconds;\r\n      }\r\n      render() { \r\n        let startOrStop = this.state.isRunning? <i class=\"fas fa-pause\"></i>: <i class=\"fas fa-play\"></i>;\r\n        let timerColor = this.state.sessionTimeLeft < 60 || this.state.breakTimeLeft < 60?{color: \"#a50d0d\"} : {color: \"white\"};\r\n        return (\r\n          <div>\r\n            <h1 class=\"project-title\">25 + 5 Clock</h1>\r\n            <div class=\"user-input\">\r\n                <div class=\"break\">\r\n                    <h2 id=\"break-label\">Break Length</h2>\r\n                    <div class=\"length-input\">\r\n                        <div id=\"break-decrement\" onClick={() => this.updateBreakLength(-1)}><i class=\"fas fa-arrow-down\"></i></div>\r\n                        <p id=\"break-length\">{this.state.breakLength}</p>\r\n                        <div id=\"break-increment\" onClick={() => this.updateBreakLength(1)}><i class=\"fas fa-arrow-up\"></i></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"session\">\r\n                    <h2 id=\"session-label\">Session Length</h2>\r\n                    <div class=\"length-input\">\r\n                        <div id=\"session-decrement\" onClick={() => this.updateSessionLength(-1)}><i class=\"fas fa-arrow-down\"></i></div>\r\n                        <p id=\"session-length\">{this.state.sessionLength}</p>\r\n                        <div id=\"session-increment\" onClick={() => this.updateSessionLength(1)}><i class=\"fas fa-arrow-up\"></i></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"timer\" style={timerColor}>\r\n                <h2 id=\"timer-label\">{this.state.isSessionRunning?\"Session\": \"Break\"}</h2>\r\n                <p id=\"time-left\">{this.getMMSS()}</p>\r\n            </div>\r\n            <div class=\"timer-control\"> \r\n                <div id=\"start_stop\" onClick={this.startStop}>{startOrStop}</div>\r\n                <div id=\"reset\" onClick={this.reset}><i class=\"fas fa-sync\"></i></div>\r\n                <audio id=\"beep\" loop>\r\n                <source src=\r\n        \"https://orangefreesounds.com/wp-content/uploads/2021/04/Bank-machine-card-warning-beeps.mp3?_=1\" \r\n                type=\"audio/mpeg\" />\r\n            </audio>\r\n            </div>\r\n            \r\n          </div>\r\n    \r\n        );\r\n      }\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Clock from './Clock';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Clock />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}